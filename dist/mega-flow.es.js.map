{"version":3,"file":"mega-flow.es.js","sources":["../src/components/Form/FormRows.js","../src/components/Form/Form.js","../src/theme/icons.js","../src/props.js","../src/index.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useFormContext } from \"react-hook-form\";\nimport {\n  Alert,\n  Checkbox,\n  FilePond,\n  FileUpload,\n  FormRow,\n  Input,\n  OutlineButton,\n  Radio,\n  ReactSelect,\n  Select,\n  Stepper,\n  TextArea,\n  ToggleSwitch,\n} from \"@licenserocks/kit\";\n\nconst mapFieldTypeToComponent = (fieldType) => {\n  switch (fieldType) {\n    case \"select\":\n      return Select;\n    case \"checkbox\":\n      return Checkbox;\n    case \"radio\":\n      return Radio;\n    case \"toggleSwitch\":\n      return ToggleSwitch;\n    case \"fileUpload\":\n      return FileUpload;\n    case \"filePond\":\n      return FilePond;\n    case \"reactSelect\":\n      return ReactSelect;\n    case \"stepper\":\n      return Stepper;\n    case \"textArea\":\n      return TextArea;\n    default:\n      return Input;\n  }\n};\n\nexport const FormRows = ({\n  data,\n  index,\n  isRecurring,\n  rows,\n  stepIndex,\n  wizardData,\n}) => {\n  const { control, errors, register } = useFormContext();\n  const [expanded, setExpanded] = useState(false);\n  const showExpandButton = rows?.some((row) => row.expandable);\n\n  return (\n    <>\n      {rows?.map((row, idx) => {\n        const rowKey = `step-${stepIndex}-row-${idx}`;\n        const rowErrors = [];\n        const showRow = row.expandable ? expanded : true;\n\n        return (\n          <FormRow\n            errors={rowErrors}\n            key={rowKey}\n            label={row.label}\n            show={showRow}\n          >\n            {row.message && (\n              <Alert\n                color={row.messageColor}\n                content={row.message}\n                style={{ marginBottom: 8 }}\n              />\n            )}\n\n            {row.fields?.map(\n              ({ defaultValue, name, required, type, ...field }, fieldId) => {\n                const Field = mapFieldTypeToComponent(type);\n                const fieldKey = `step-${stepIndex}-row-${idx}-field-${fieldId}`;\n                const fieldName = isRecurring\n                  ? `${data.name}[${index}].${name}`\n                  : name;\n\n                const error =\n                  isRecurring && errors[data.name] && errors[data.name][index]\n                    ? errors[data.name][index][name]?.message\n                    : errors[name]?.message;\n                if (error) rowErrors.push(error);\n\n                const prevValue =\n                  isRecurring &&\n                  wizardData[data.name] &&\n                  wizardData[data.name][index]\n                    ? wizardData[data.name][index][name]\n                    : wizardData[name];\n\n                return (\n                  <Field\n                    control={control}\n                    defaultValue={prevValue || defaultValue}\n                    hasError={!!error}\n                    isRequired={required}\n                    key={fieldKey}\n                    name={fieldName}\n                    register={register({\n                      required,\n                    })}\n                    type={type}\n                    {...field}\n                  />\n                );\n              }\n            )}\n          </FormRow>\n        );\n      })}\n\n      {showExpandButton && (\n        <OutlineButton\n          color=\"secondary\"\n          onClick={() => setExpanded((prev) => !prev)}\n          size=\"sm\"\n        >\n          {expanded ? \"Hide Optional Params\" : \"Show Optional Params\"}\n        </OutlineButton>\n      )}\n    </>\n  );\n};\n\nFormRows.propTypes = {\n  data: PropTypes.shape({\n    name: PropTypes.string,\n    recurring: PropTypes.bool,\n    rows: PropTypes.arrayOf(PropTypes.shape({})),\n  }).isRequired,\n  stepIndex: PropTypes.number.isRequired,\n  wizardData: PropTypes.shape({}).isRequired,\n  index: PropTypes.number.isRequired,\n  isRecurring: PropTypes.bool.isRequired,\n  rows: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n};\n\nFormRows.defaultProps = {};\n","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { useFieldArray } from \"react-hook-form\";\nimport { Icon, OutlineButton, TextButton } from \"@licenserocks/kit\";\n\nimport { FormRows } from \"./FormRows\";\n\nconst Wrapper = styled.div`\n  padding: ${({ theme }) => theme.spacing(2, 2, 2, 6)};\n  background-color: ${({ theme }) => theme.palette.gray.light};\n  border: 1px solid ${({ theme }) => theme.palette.gray.regular};\n  border-radius: 16px;\n  margin-bottom: 16px;\n`;\n\nconst ButtonsWrapper = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  margin-bottom: 8px;\n`;\n\nconst Form = ({ data, stepIndex, wizardData }) => {\n  const isRecurring = data.recurring;\n\n  const { fields, append, remove } = useFieldArray({\n    name: isRecurring ? data?.name : \"\",\n  });\n\n  useEffect(() => {\n    if (fields.length === 0) {\n      append();\n    }\n  }, []);\n\n  const renderRows = (index) => (\n    <FormRows\n      data={data}\n      index={index}\n      isRecurring={isRecurring}\n      rows={data.rows}\n      stepIndex={stepIndex}\n      wizardData={wizardData}\n    />\n  );\n\n  const renderRecurring = () =>\n    fields.map((item, idx) => (\n      <Wrapper key={item.id}>\n        <ButtonsWrapper>\n          <OutlineButton\n            color=\"danger\"\n            disabled={fields.length === 1}\n            onClick={() => remove(idx)}\n            size=\"sm\"\n          >\n            <Icon icon=\"trash\" prefix=\"fa\" />\n          </OutlineButton>\n        </ButtonsWrapper>\n\n        {renderRows(idx)}\n      </Wrapper>\n    ));\n\n  return (\n    <>\n      {isRecurring ? renderRecurring() : renderRows()}\n      {isRecurring && (\n        <TextButton content=\"+ Add item\" onClick={append} size=\"sm\" />\n      )}\n    </>\n  );\n};\n\nForm.propTypes = {\n  data: PropTypes.shape({\n    name: PropTypes.string,\n    recurring: PropTypes.bool,\n    rows: PropTypes.arrayOf(PropTypes.shape({})),\n  }).isRequired,\n  stepIndex: PropTypes.number.isRequired,\n  wizardData: PropTypes.shape({}).isRequired,\n};\n\nForm.defaultProps = {};\n\nexport default Form;\n","import {\n  faDownload,\n  faHashtag,\n  faTrash,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nexport const MegaFlowIcons = {\n  faDownload,\n  faHashtag,\n  faTrash,\n};\n","import PropTypes from \"prop-types\";\n\nexport const MegaFlowPropTypes = {\n  icons: PropTypes.arrayOf(PropTypes.shape()),\n  schema: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\n  onFinish: PropTypes.func,\n  onStepSubmit: PropTypes.func,\n  wizardProps: PropTypes.shape,\n  wrapperProps: PropTypes.shape,\n};\n\nexport const MegaFlowDefaultProps = {\n  icons: [],\n  onFinish: () => {},\n};\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { FormProvider, useForm } from \"react-hook-form\";\nimport {\n  AppContainer,\n  RocksKitIcons,\n  RocksKitTheme,\n  Wizard,\n} from \"@licenserocks/kit\";\n\nimport { Form } from \"./components\";\nimport { MegaFlowIcons } from \"./theme\";\nimport { MegaFlowPropTypes, MegaFlowDefaultProps } from \"./props\";\n\nconst Wrapper = styled.div``;\n\nconst MegaFlow = ({\n  icons,\n  schema,\n  onFinish,\n  onStepSubmit,\n  wizardProps,\n  wrapperProps,\n  ...props\n}) => {\n  // Parse if schema was type of JSON string\n  const parsedSchema = typeof schema === \"string\" ? JSON.parse(schema) : schema;\n\n  const { steps } = parsedSchema;\n  const [currentStep, setCurrentStep] = useState(0);\n  const isCurrentLastStep = currentStep === steps.length - 1;\n  const [wizardData, setWizardData] = useState({});\n\n  const { handleSubmit, ...methods } = useForm({\n    defaultValues: wizardData,\n  });\n\n  const onSubmit = (data) => {\n    // Set step data in global wizard object\n    setWizardData((prev) => ({\n      ...prev,\n      ...data,\n    }));\n\n    // Send step data to props\n    if (onStepSubmit) onStepSubmit(data);\n\n    if (!isCurrentLastStep) {\n      setCurrentStep((prev) => prev + 1);\n    } else {\n      onFinish(wizardData);\n    }\n  };\n\n  const stepsArray = steps.map((st) => st.title);\n\n  const renderForm = () => (\n    <Form\n      data={steps[currentStep]}\n      stepIndex={currentStep}\n      wizardData={wizardData}\n    />\n  );\n\n  return (\n    <AppContainer\n      icons={{ ...RocksKitIcons, ...MegaFlowIcons, ...icons }}\n      theme={RocksKitTheme}\n    >\n      <Wrapper {...wrapperProps}>\n        <FormProvider {...methods}>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <Wizard\n              currentStepContent={renderForm()}\n              currentStepIndex={currentStep}\n              setCurrentStepIndex={setCurrentStep}\n              steps={stepsArray}\n              {...wizardProps}\n              {...props}\n            />\n          </form>\n        </FormProvider>\n      </Wrapper>\n    </AppContainer>\n  );\n};\n\nMegaFlow.propTypes = MegaFlowPropTypes;\n\nMegaFlow.defaultProps = MegaFlowDefaultProps;\n\nexport default MegaFlow;\n"],"names":["mapFieldTypeToComponent","fieldType","Select","Checkbox","Radio","ToggleSwitch","FileUpload","FilePond","ReactSelect","Stepper","TextArea","Input","FormRows","data","index","isRecurring","rows","stepIndex","wizardData","useFormContext","control","errors","register","useState","expanded","setExpanded","showExpandButton","some","row","expandable","map","idx","rowKey","rowErrors","showRow","label","message","messageColor","marginBottom","fields","fieldId","defaultValue","name","required","type","field","Field","fieldKey","fieldName","error","push","prevValue","prev","propTypes","PropTypes","shape","string","recurring","bool","arrayOf","isRequired","number","defaultProps","Wrapper","styled","div","theme","spacing","palette","gray","light","regular","ButtonsWrapper","Form","useFieldArray","append","remove","useEffect","length","renderRows","renderRecurring","item","id","MegaFlowIcons","faDownload","faHashtag","faTrash","MegaFlowPropTypes","icons","schema","oneOfType","object","onFinish","func","onStepSubmit","wizardProps","wrapperProps","MegaFlowDefaultProps","MegaFlow","props","parsedSchema","JSON","parse","steps","currentStep","setCurrentStep","isCurrentLastStep","setWizardData","useForm","defaultValues","handleSubmit","methods","onSubmit","stepsArray","st","title","renderForm","RocksKitIcons","RocksKitTheme"],"mappings":"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"}