{"version":3,"file":"mega-flow.js","sources":["../src/components/Form/FormRows.js","../src/components/Form/Form.js","../src/theme/icons.js","../src/props.js","../src/index.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useFormContext } from \"react-hook-form\";\nimport {\n  Alert,\n  Checkbox,\n  FileUpload,\n  FormRow,\n  Input,\n  OutlineButton,\n  Radio,\n  ReactSelect,\n  Select,\n  Stepper,\n  ToggleSwitch,\n} from \"rockskit\";\n\nconst mapFieldTypeToComponent = (fieldType) => {\n  switch (fieldType) {\n    case \"select\":\n      return Select;\n    case \"checkbox\":\n      return Checkbox;\n    case \"radio\":\n      return Radio;\n    case \"toggleSwitch\":\n      return ToggleSwitch;\n    case \"fileUpload\":\n      return FileUpload;\n    case \"reactSelect\":\n      return ReactSelect;\n    case \"stepper\":\n      return Stepper;\n    default:\n      return Input;\n  }\n};\n\nexport const FormRows = ({\n  data,\n  index,\n  isRecurring,\n  rows,\n  stepIndex,\n  wizardData,\n}) => {\n  const { control, errors, register } = useFormContext();\n  const [expanded, setExpanded] = useState(false);\n  const showExpandButton = rows?.some((row) => row.expandable);\n\n  return (\n    <>\n      {rows?.map((row, idx) => {\n        const rowKey = `step-${stepIndex}-row-${idx}`;\n        const rowErrors = [];\n        const showRow = row.expandable ? expanded : true;\n\n        return (\n          <FormRow\n            errors={rowErrors}\n            key={rowKey}\n            label={row.label}\n            show={showRow}\n          >\n            {row.message && (\n              <Alert\n                color={row.messageColor}\n                content={row.message}\n                style={{ marginBottom: 8 }}\n              />\n            )}\n\n            {row.fields?.map(\n              ({ defaultValue, name, required, type, ...field }, fieldId) => {\n                const Field = mapFieldTypeToComponent(type);\n                const fieldKey = `step-${stepIndex}-row-${idx}-field-${fieldId}`;\n                const fieldName = isRecurring\n                  ? `${data.name}[${index}].${name}`\n                  : name;\n\n                const error =\n                  isRecurring && errors[data.name] && errors[data.name][index]\n                    ? errors[data.name][index][name]?.message\n                    : errors[name]?.message;\n                if (error) rowErrors.push(error);\n\n                const prevValue =\n                  isRecurring &&\n                  wizardData[data.name] &&\n                  wizardData[data.name][index]\n                    ? wizardData[data.name][index][name]\n                    : wizardData[name];\n\n                return (\n                  <Field\n                    control={control}\n                    defaultValue={prevValue || defaultValue}\n                    hasError={!!error}\n                    isRequired={required}\n                    key={fieldKey}\n                    name={fieldName}\n                    register={register({\n                      required,\n                    })}\n                    type={type}\n                    {...field}\n                  />\n                );\n              }\n            )}\n          </FormRow>\n        );\n      })}\n\n      {showExpandButton && (\n        <OutlineButton\n          color=\"secondary\"\n          onClick={() => setExpanded((prev) => !prev)}\n          size=\"sm\"\n        >\n          {expanded ? \"Hide Optional Params\" : \"Show Optional Params\"}\n        </OutlineButton>\n      )}\n    </>\n  );\n};\n\nFormRows.propTypes = {\n  data: PropTypes.shape({\n    name: PropTypes.string,\n    recurring: PropTypes.bool,\n    rows: PropTypes.arrayOf(PropTypes.shape({})),\n  }).isRequired,\n  stepIndex: PropTypes.number.isRequired,\n  wizardData: PropTypes.shape({}).isRequired,\n  index: PropTypes.number.isRequired,\n  isRecurring: PropTypes.bool.isRequired,\n  rows: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n};\n\nFormRows.defaultProps = {};\n","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { useFieldArray } from \"react-hook-form\";\nimport { Icon, OutlineButton, TextButton } from \"rockskit\";\n\nimport { FormRows } from \"./FormRows\";\n\nconst Wrapper = styled.div`\n  padding: ${({ theme }) => theme.spacing(2, 2, 2, 6)};\n  background-color: ${({ theme }) => theme.palette.gray.light};\n  border: 1px solid ${({ theme }) => theme.palette.gray.regular};\n  border-radius: 16px;\n  margin-bottom: 16px;\n`;\n\nconst ButtonsWrapper = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  margin-bottom: 8px;\n`;\n\nconst Form = ({ data, stepIndex, wizardData }) => {\n  const isRecurring = data.recurring;\n\n  const { fields, append, remove } = useFieldArray({\n    name: isRecurring ? data?.name : \"\",\n  });\n\n  useEffect(() => {\n    if (fields.length === 0) {\n      append();\n    }\n  }, []);\n\n  const renderRows = (index) => (\n    <FormRows\n      data={data}\n      index={index}\n      isRecurring={isRecurring}\n      rows={data.rows}\n      stepIndex={stepIndex}\n      wizardData={wizardData}\n    />\n  );\n\n  const renderRecurring = () =>\n    fields.map((item, idx) => (\n      <Wrapper key={item.id}>\n        <ButtonsWrapper>\n          <OutlineButton\n            color=\"danger\"\n            disabled={fields.length === 1}\n            onClick={() => remove(idx)}\n            size=\"sm\"\n          >\n            <Icon icon=\"trash\" prefix=\"fa\" />\n          </OutlineButton>\n        </ButtonsWrapper>\n\n        {renderRows(idx)}\n      </Wrapper>\n    ));\n\n  return (\n    <>\n      {isRecurring ? renderRecurring() : renderRows()}\n      {isRecurring && (\n        <TextButton content=\"+ Add item\" onClick={append} size=\"sm\" />\n      )}\n    </>\n  );\n};\n\nForm.propTypes = {\n  data: PropTypes.shape({\n    name: PropTypes.string,\n    recurring: PropTypes.bool,\n    rows: PropTypes.arrayOf(PropTypes.shape({})),\n  }).isRequired,\n  stepIndex: PropTypes.number.isRequired,\n  wizardData: PropTypes.shape({}).isRequired,\n};\n\nForm.defaultProps = {};\n\nexport default Form;\n","import {\n  faDownload,\n  faHashtag,\n  faTrash,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nexport const Icons = {\n  faDownload,\n  faHashtag,\n  faTrash,\n};\n","import PropTypes from \"prop-types\";\n\nexport const MegaFlowPropTypes = {\n  schema: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\n  onFinish: PropTypes.func,\n  onStepSubmit: PropTypes.func,\n  wizardProps: PropTypes.shape,\n  wrapperProps: PropTypes.shape,\n};\n\nexport const MegaFlowDefaultProps = {\n  onFinish: () => {},\n};\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { FormProvider, useForm } from \"react-hook-form\";\nimport { AppContainer, RocksKitIcons, RocksKitTheme, Wizard } from \"rockskit\";\n\nimport { Form } from \"./components\";\nimport { Icons } from \"./theme\";\nimport { MegaFlowPropTypes, MegaFlowDefaultProps } from \"./props\";\n\nconst Wrapper = styled.div``;\n\nconst MegaFlow = ({\n  schema,\n  onFinish,\n  onStepSubmit,\n  wizardProps,\n  wrapperProps,\n}) => {\n  // Parse if schema was type of JSON string\n  const parsedSchema = typeof schema === \"string\" ? JSON.parse(schema) : schema;\n\n  const { steps } = parsedSchema;\n  const [currentStep, setCurrentStep] = useState(0);\n  const isCurrentLastStep = currentStep === steps.length - 1;\n  const [wizardData, setWizardData] = useState({});\n\n  const methods = useForm({\n    mode: \"onBlur\",\n    defaultValues: wizardData,\n  });\n\n  const onSubmit = (data) => {\n    // Set step data in global wizard object\n    setWizardData((prev) => ({\n      ...prev,\n      ...data,\n    }));\n\n    // Send step data to props\n    if (onStepSubmit) onStepSubmit(data);\n\n    if (!isCurrentLastStep) {\n      setCurrentStep((prev) => prev + 1);\n    } else {\n      onFinish(wizardData);\n    }\n  };\n\n  const stepsArray = steps.map((st) => st.title);\n\n  const renderForm = () => (\n    <Form\n      data={steps[currentStep]}\n      stepIndex={currentStep}\n      wizardData={wizardData}\n    />\n  );\n\n  return (\n    <AppContainer icons={{ ...RocksKitIcons, ...Icons }} theme={RocksKitTheme}>\n      <Wrapper {...wrapperProps}>\n        <FormProvider {...methods}>\n          <form onSubmit={methods.handleSubmit(onSubmit)}>\n            <Wizard\n              currentStepContent={renderForm()}\n              currentStepIndex={currentStep}\n              setCurrentStepIndex={setCurrentStep}\n              steps={stepsArray}\n              {...wizardProps}\n            />\n          </form>\n        </FormProvider>\n      </Wrapper>\n    </AppContainer>\n  );\n};\n\nMegaFlow.propTypes = MegaFlowPropTypes;\n\nMegaFlow.defaultProps = MegaFlowDefaultProps;\n\nexport default MegaFlow;\n"],"names":["mapFieldTypeToComponent","fieldType","Select","Checkbox","Radio","ToggleSwitch","FileUpload","ReactSelect","Stepper","Input","FormRows","data","index","isRecurring","rows","stepIndex","wizardData","useFormContext","control","errors","register","useState","expanded","setExpanded","showExpandButton","some","row","expandable","React","map","idx","rowKey","rowErrors","showRow","FormRow","label","message","Alert","messageColor","marginBottom","fields","fieldId","defaultValue","name","required","type","field","Field","fieldKey","fieldName","error","push","prevValue","OutlineButton","prev","propTypes","PropTypes","shape","string","recurring","bool","arrayOf","isRequired","number","defaultProps","Wrapper","styled","div","theme","spacing","palette","gray","light","regular","ButtonsWrapper","Form","useFieldArray","append","remove","useEffect","length","renderRows","renderRecurring","item","id","Icon","TextButton","Icons","faDownload","faHashtag","faTrash","MegaFlowPropTypes","schema","oneOfType","object","onFinish","func","onStepSubmit","wizardProps","wrapperProps","MegaFlowDefaultProps","MegaFlow","parsedSchema","JSON","parse","steps","currentStep","setCurrentStep","isCurrentLastStep","setWizardData","methods","useForm","mode","defaultValues","onSubmit","stepsArray","st","title","renderForm","AppContainer","RocksKitIcons","RocksKitTheme","FormProvider","handleSubmit","Wizard"],"mappings":"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"}