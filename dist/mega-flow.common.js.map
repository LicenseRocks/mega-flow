{"version":3,"file":"mega-flow.common.js","sources":["../src/components/Form/Field.js","../src/components/Form/FormRows.js","../src/components/Form/Form.js","../src/theme/icons.js","../src/props.js","../src/index.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useFormContext, useWatch } from \"react-hook-form\";\nimport {\n  Alert,\n  BorderedRadio,\n  Checkbox,\n  FilePond,\n  FileUpload,\n  FormRow,\n  Input,\n  OutlineButton,\n  Radio,\n  ReactSelect,\n  Select,\n  Stepper,\n  TextArea,\n  ToggleSwitch,\n} from \"@licenserocks/kit\";\n\nconst mapFieldTypeToComponent = (fieldType) => {\n  switch (fieldType) {\n    case \"select\":\n      return Select;\n    case \"borderedRadio\":\n      return BorderedRadio;\n    case \"checkbox\":\n      return Checkbox;\n    case \"radio\":\n      return Radio;\n    case \"toggleSwitch\":\n      return ToggleSwitch;\n    case \"fileUpload\":\n      return FileUpload;\n    case \"filePond\":\n      return FilePond;\n    case \"reactSelect\":\n      return ReactSelect;\n    case \"stepper\":\n      return Stepper;\n    case \"textArea\":\n      return TextArea;\n    default:\n      return Input;\n  }\n};\n\nconst getConditionValues = (conditions, control, wizardData) => {\n  const name = conditions.map((c) => {\n    if (c.includes(\":\")) {\n      const [name] = c.split(\":\");\n      return name;\n    }\n    return c;\n  });\n  return useWatch({\n    control,\n    name,\n    defaultValue: wizardData,\n  });\n};\n\nconst checkCondition = (conditions, control, wizardData) => {\n  const hasConditions = conditions && conditions.length > 0;\n  if (hasConditions) {\n    const conditionValues = getConditionValues(conditions, control, wizardData);\n\n    return conditions.some((c) => {\n      if (c.includes(\":\")) {\n        const [name, value] = c.split(\":\");\n        return (\n          conditionValues[name] === value ||\n          conditionValues[name]?.includes(value)\n        );\n      }\n      return conditionValues[c]?.length > 0;\n    });\n  }\n  return true;\n};\n\nexport const FormField = ({\n  data,\n  field,\n  hasError,\n  isRecurring,\n  stepIndex,\n  fieldId,\n  rowId,\n  wizardData,\n}) => {\n  const { control, register } = useFormContext();\n  const { conditions, defaultValue, name, required, type, ...others } = field;\n  const Field = mapFieldTypeToComponent(type);\n  const fieldKey = `step-${stepIndex}-row-${rowId}-field-${fieldId}`;\n  const fieldName = isRecurring ? `${data.name}[${index}].${name}` : name;\n\n  const prevValue =\n    isRecurring && wizardData[data.name] && wizardData[data.name][index]\n      ? wizardData[data.name][index][name]\n      : wizardData[name];\n\n  const showIfHasCondition = checkCondition(conditions, control, wizardData);\n\n  if (!showIfHasCondition) return null;\n  return (\n    <Field\n      control={control}\n      defaultValue={prevValue || defaultValue}\n      hasError={hasError}\n      isRequired={required}\n      key={fieldKey}\n      name={fieldName}\n      register={register({\n        required,\n      })}\n      type={type}\n      {...others}\n    />\n  );\n};\n\nFormField.propTypes = {\n  data: PropTypes.shape({\n    name: PropTypes.string,\n    recurring: PropTypes.bool,\n    rows: PropTypes.arrayOf(PropTypes.shape({})),\n  }).isRequired,\n  field: PropTypes.shape({}).isRequired,\n  fieldId: PropTypes.number.isRequired,\n  hasError: PropTypes.bool.isRequired,\n  isRecurring: PropTypes.bool.isRequired,\n  stepIndex: PropTypes.number.isRequired,\n  wizardData: PropTypes.shape({}).isRequired,\n  rowId: PropTypes.number.isRequired,\n};\n\nFormField.defaultProps = {};\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useFormContext } from \"react-hook-form\";\nimport { Alert, FormRow, OutlineButton } from \"@licenserocks/kit\";\n\nimport { FormField } from \"./Field\";\n\nexport const FormRows = ({\n  data,\n  index,\n  isRecurring,\n  rows,\n  stepIndex,\n  wizardData,\n}) => {\n  const { errors } = useFormContext();\n  const [expanded, setExpanded] = useState(false);\n  const showExpandButton = rows?.some((row) => row.expandable);\n  const checkConditions = rows?.some((row) => {\n    return;\n  });\n\n  return (\n    <>\n      {rows?.map((row, idx) => {\n        const rowKey = `step-${stepIndex}-row-${idx}`;\n        const rowErrors = [];\n        const showRow = row.expandable ? expanded : true;\n\n        return (\n          <FormRow\n            errors={rowErrors}\n            key={rowKey}\n            label={row.label}\n            show={showRow}\n          >\n            {row.message && (\n              <Alert color={row.messageColor} content={row.message} mb={2} />\n            )}\n\n            {row.fields?.map((field, fieldId) => {\n              const error =\n                isRecurring && errors[data.name] && errors[data.name][index]\n                  ? errors[data.name][index][field.name]?.message\n                  : errors[field.name]?.message;\n\n              if (error) rowErrors.push(error);\n\n              return (\n                <FormField\n                  data={data}\n                  field={field}\n                  fieldId={fieldId}\n                  hasError={!!error}\n                  isRecurring={isRecurring}\n                  rowId={idx}\n                  stepIndex={stepIndex}\n                  wizardData={wizardData}\n                />\n              );\n            })}\n          </FormRow>\n        );\n      })}\n\n      {showExpandButton && (\n        <OutlineButton\n          color=\"secondary\"\n          onClick={() => setExpanded((prev) => !prev)}\n          size=\"sm\"\n        >\n          {expanded ? \"Hide Optional Params\" : \"Show Optional Params\"}\n        </OutlineButton>\n      )}\n    </>\n  );\n};\n\nFormRows.propTypes = {\n  data: PropTypes.shape({\n    name: PropTypes.string,\n    recurring: PropTypes.bool,\n    rows: PropTypes.arrayOf(PropTypes.shape({})),\n  }).isRequired,\n  stepIndex: PropTypes.number.isRequired,\n  wizardData: PropTypes.shape({}).isRequired,\n  index: PropTypes.number.isRequired,\n  isRecurring: PropTypes.bool.isRequired,\n  rows: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n};\n\nFormRows.defaultProps = {};\n","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { useFieldArray } from \"react-hook-form\";\nimport { Icon, OutlineButton, TextButton } from \"@licenserocks/kit\";\n\nimport { FormRows } from \"./FormRows\";\n\nconst Wrapper = styled.div`\n  padding: ${({ theme }) => theme.spacing(2, 2, 2, 6)};\n  background-color: ${({ theme }) => theme.palette.gray.light};\n  border: 1px solid ${({ theme }) => theme.palette.gray.regular};\n  border-radius: 16px;\n  margin-bottom: 16px;\n`;\n\nconst ButtonsWrapper = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  margin-bottom: 8px;\n`;\n\nconst Form = ({ data, stepIndex, wizardData }) => {\n  const isRecurring = data.recurring;\n\n  const { fields, append, remove } = useFieldArray({\n    name: isRecurring ? data?.name : \"\",\n  });\n\n  useEffect(() => {\n    if (fields.length === 0) {\n      append();\n    }\n  }, []);\n\n  const renderRows = (index) => (\n    <FormRows\n      data={data}\n      index={index}\n      isRecurring={isRecurring}\n      rows={data.rows}\n      stepIndex={stepIndex}\n      wizardData={wizardData}\n    />\n  );\n\n  const renderRecurring = () =>\n    fields.map((item, idx) => (\n      <Wrapper key={item.id}>\n        <ButtonsWrapper>\n          <OutlineButton\n            color=\"danger\"\n            disabled={fields.length === 1}\n            onClick={() => remove(idx)}\n            size=\"sm\"\n          >\n            <Icon icon=\"trash\" prefix=\"fa\" />\n          </OutlineButton>\n        </ButtonsWrapper>\n\n        {renderRows(idx)}\n      </Wrapper>\n    ));\n\n  return (\n    <>\n      {isRecurring ? renderRecurring() : renderRows()}\n      {isRecurring && (\n        <TextButton content=\"+ Add item\" onClick={append} size=\"sm\" />\n      )}\n    </>\n  );\n};\n\nForm.propTypes = {\n  data: PropTypes.shape({\n    name: PropTypes.string,\n    recurring: PropTypes.bool,\n    rows: PropTypes.arrayOf(PropTypes.shape({})),\n  }).isRequired,\n  stepIndex: PropTypes.number.isRequired,\n  wizardData: PropTypes.shape({}).isRequired,\n};\n\nForm.defaultProps = {};\n\nexport default Form;\n","import {\n  faDownload,\n  faHashtag,\n  faTrash,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nexport const MegaFlowIcons = {\n  faDownload,\n  faHashtag,\n  faTrash,\n};\n","import PropTypes from \"prop-types\";\n\nexport const MegaFlowPropTypes = {\n  icons: PropTypes.arrayOf(PropTypes.shape()),\n  schema: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\n  onFinish: PropTypes.func,\n  onStepSubmit: PropTypes.func,\n  theme: PropTypes.shape(),\n  wizardProps: PropTypes.shape(),\n  wrapperProps: PropTypes.shape(),\n};\n\nexport const MegaFlowDefaultProps = {\n  icons: [],\n  onFinish: () => {},\n};\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { FormProvider, useForm } from \"react-hook-form\";\nimport {\n  AppContainer,\n  RocksKitIcons,\n  RocksKitTheme,\n  Wizard,\n} from \"@licenserocks/kit\";\n\nimport { Form } from \"./components\";\nimport { MegaFlowIcons } from \"./theme\";\nimport { MegaFlowPropTypes, MegaFlowDefaultProps } from \"./props\";\n\nconst Wrapper = styled.div``;\n\nconst MegaFlow = ({\n  icons,\n  schema,\n  onFinish,\n  onStepSubmit,\n  theme,\n  wizardProps,\n  wrapperProps,\n  ...props\n}) => {\n  // Parse if schema was type of JSON string\n  const parsedSchema = typeof schema === \"string\" ? JSON.parse(schema) : schema;\n\n  const { steps } = parsedSchema;\n  const [currentStep, setCurrentStep] = useState(0);\n  const isCurrentLastStep = currentStep === steps.length - 1;\n  const [wizardData, setWizardData] = useState({});\n\n  const { handleSubmit, ...methods } = useForm({\n    defaultValues: wizardData,\n  });\n\n  const onSubmit = (data) => {\n    const currentState = {\n      ...wizardData,\n      ...data,\n    };\n    // Set step data in global wizard object\n    setWizardData(currentState);\n\n    // Send step data to props\n    if (onStepSubmit) onStepSubmit(data);\n\n    if (!isCurrentLastStep) {\n      setCurrentStep((prev) => prev + 1);\n    } else {\n      onFinish(currentState);\n    }\n  };\n\n  const stepsArray = steps.map((st) => st.title);\n\n  const renderForm = () => (\n    <Form\n      data={steps[currentStep]}\n      stepIndex={currentStep}\n      wizardData={wizardData}\n    />\n  );\n\n  return (\n    <AppContainer\n      icons={{ ...RocksKitIcons, ...MegaFlowIcons, ...icons }}\n      theme={theme || RocksKitTheme}\n    >\n      <Wrapper {...wrapperProps}>\n        <FormProvider {...methods}>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <Wizard\n              currentStepContent={renderForm()}\n              currentStepIndex={currentStep}\n              setCurrentStepIndex={setCurrentStep}\n              steps={stepsArray}\n              {...wizardProps}\n              {...props}\n            />\n          </form>\n        </FormProvider>\n      </Wrapper>\n    </AppContainer>\n  );\n};\n\nMegaFlow.propTypes = MegaFlowPropTypes;\n\nMegaFlow.defaultProps = MegaFlowDefaultProps;\n\nexport default MegaFlow;\n"],"names":["mapFieldTypeToComponent","fieldType","Select","BorderedRadio","Checkbox","Radio","ToggleSwitch","FileUpload","FilePond","ReactSelect","Stepper","TextArea","Input","getConditionValues","conditions","control","wizardData","name","map","c","includes","split","useWatch","defaultValue","checkCondition","hasConditions","length","conditionValues","some","value","FormField","data","field","hasError","isRecurring","stepIndex","fieldId","rowId","useFormContext","register","required","type","others","Field","fieldKey","fieldName","index","prevValue","showIfHasCondition","React","propTypes","PropTypes","shape","string","recurring","bool","rows","arrayOf","isRequired","number","defaultProps","FormRows","errors","useState","expanded","setExpanded","showExpandButton","row","expandable","checkConditions","idx","rowKey","rowErrors","showRow","FormRow","label","message","Alert","messageColor","fields","error","push","OutlineButton","prev","Wrapper","styled","div","theme","spacing","palette","gray","light","regular","ButtonsWrapper","Form","useFieldArray","append","remove","useEffect","renderRows","renderRecurring","item","id","Icon","TextButton","MegaFlowIcons","faDownload","faHashtag","faTrash","MegaFlowPropTypes","icons","schema","oneOfType","object","onFinish","func","onStepSubmit","wizardProps","wrapperProps","MegaFlowDefaultProps","MegaFlow","props","parsedSchema","JSON","parse","steps","currentStep","setCurrentStep","isCurrentLastStep","setWizardData","useForm","defaultValues","handleSubmit","methods","onSubmit","currentState","stepsArray","st","title","renderForm","AppContainer","RocksKitIcons","RocksKitTheme","FormProvider","Wizard"],"mappings":"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"}