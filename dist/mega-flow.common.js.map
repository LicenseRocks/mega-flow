{"version":3,"file":"mega-flow.common.js","sources":["../src/components/Form/Field.js","../src/helpers/conditions.js","../src/components/Form/FormRows.js","../src/components/Form/Form.js","../src/theme/icons.js","../src/props.js","../src/index.js"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useFormContext } from \"react-hook-form\";\nimport {\n  BorderedRadio,\n  Checkbox,\n  FormDatepicker,\n  FilePond,\n  FileUpload,\n  Input,\n  PriceField,\n  Radio,\n  ReactSelect,\n  Select,\n  Stepper,\n  TextArea,\n  TextButton,\n  ToggleSwitch,\n} from \"@licenserocks/kit\";\n\nconst mapFieldTypeToComponent = (fieldType) => {\n  switch (fieldType) {\n    case \"datepicker\":\n      return FormDatepicker;\n    case \"select\":\n      return Select;\n    case \"borderedRadio\":\n      return BorderedRadio;\n    case \"checkbox\":\n      return Checkbox;\n    case \"radio\":\n      return Radio;\n    case \"toggleSwitch\":\n      return ToggleSwitch;\n    case \"fileUpload\":\n      return FileUpload;\n    case \"filePond\":\n      return FilePond;\n    case \"price\":\n      return PriceField;\n    case \"reactSelect\":\n      return ReactSelect;\n    case \"stepper\":\n      return Stepper;\n    case \"textArea\":\n      return TextArea;\n    default:\n      return Input;\n  }\n};\n\nexport const FormField = ({\n  data,\n  field,\n  hasError,\n  isRecurring,\n  recurringIndex,\n  stepIndex,\n  fieldId,\n  rowId,\n  stepData,\n  currenciesFromDB,\n}) => {\n  const { control, register } = useFormContext();\n  const { conditions, defaultValue, name, required, type, ...others } = field;\n  if (type === \"link\") return <TextButton {...others} />;\n\n  const Field = mapFieldTypeToComponent(type);\n  const fieldKey = `step-${stepIndex}-row-${rowId}-field-${fieldId}`;\n  const fieldName = isRecurring\n    ? `${data.name}[${recurringIndex}].${name}`\n    : name;\n\n  const prevValue =\n    isRecurring && stepData[data.name] && stepData[data.name][recurringIndex]\n      ? stepData[data.name][recurringIndex][name]\n      : stepData[name];\n\n  return (\n    <Field\n      control={control}\n      defaultValue={prevValue || defaultValue}\n      hasError={hasError}\n      isRequired={required}\n      key={fieldKey}\n      name={fieldName}\n      currenciesFromDB={currenciesFromDB}\n      register={register({\n        required,\n      })}\n      type={type}\n      {...others}\n    />\n  );\n};\n\nFormField.propTypes = {\n  data: PropTypes.shape({\n    name: PropTypes.string,\n    recurring: PropTypes.bool,\n    rows: PropTypes.arrayOf(PropTypes.shape({})),\n  }).isRequired,\n  field: PropTypes.shape({\n    conditions: PropTypes.arrayOf(PropTypes.string),\n    defaultValue: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    name: PropTypes.string,\n    required: PropTypes.string,\n    type: PropTypes.string,\n  }).isRequired,\n  fieldId: PropTypes.number.isRequired,\n  hasError: PropTypes.bool.isRequired,\n  isRecurring: PropTypes.bool.isRequired,\n  recurringIndex: PropTypes.number,\n  stepIndex: PropTypes.number.isRequired,\n  stepData: PropTypes.shape({}).isRequired,\n  rowId: PropTypes.number.isRequired,\n};\n\nFormField.defaultProps = {\n  recurringIndex: null,\n};\n","const getConditionValues = (\n  conditions,\n  watch,\n  wizardData,\n  isRecurring,\n  recurringName\n) => {\n  const name = conditions.map((c) => {\n    if (c.includes(\":\")) {\n      const [n] = c.split(\":\");\n      return n;\n    }\n    return c;\n  });\n\n  return watch(isRecurring ? [recurringName] : name, wizardData);\n};\n\nexport const checkCondition = (\n  conditions,\n  watch,\n  wizardData,\n  isRecurring,\n  recurringName,\n  recurringIndex\n) => {\n  const hasConditions = conditions && conditions.length > 0;\n  if (hasConditions) {\n    const conditionValues = getConditionValues(\n      conditions,\n      watch,\n      wizardData,\n      isRecurring,\n      recurringName\n    );\n\n    const target = isRecurring\n      ? conditionValues?.[recurringName]?.[recurringIndex]\n      : conditionValues;\n\n    if (conditionValues && target) {\n      return conditions.some((c) => {\n        if (c.includes(\":\")) {\n          const [name, value, not] = c.split(\":\");\n          const isTrue =\n            target[name] === value ||\n            (Array.isArray(value) && target[name]?.includes(value)) ||\n            (value === \"true\" && Boolean(target[name]));\n\n          if (not) return !isTrue;\n          return isTrue;\n        }\n        return target[c]?.length > 0 || !!target[c];\n      });\n    }\n  }\n  return true;\n};\n","import React, { Fragment, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { useFormContext } from \"react-hook-form\";\nimport {\n  Alert,\n  Divider,\n  FormRow,\n  Icon,\n  OutlineButton,\n  Tooltip,\n} from \"@licenserocks/kit\";\n\nimport { FormField } from \"./Field\";\nimport { checkCondition } from \"../../helpers\";\n\nconst StyledRow = styled(FormRow)`\n  && {\n    label {\n      :only-child {\n        display: none;\n      }\n    }\n  }\n`;\n\nconst Hint = styled.span`\n  background: #f0f0f4;\n  border-radius: 100%;\n  width: 20px;\n  height: 20px;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  margin-left: 8px;\n  vertical-align: middle;\n\n  svg {\n    color: #8685a6;\n    font-size: 10px;\n  }\n`;\n\nexport const FormRows = ({\n  data,\n  index,\n  isRecurring,\n  rows,\n  stepIndex,\n  stepData,\n  currenciesFromDB,\n}) => {\n  const { errors, watch } = useFormContext();\n  const [expanded, setExpanded] = useState(false);\n  const showExpandButton = rows?.some((row) => row.expandable);\n\n  return (\n    <>\n      {rows?.map((row, idx) => {\n        const rowKey = `step-${stepIndex}-row-${idx}`;\n        const rowErrors = [];\n        const rowConditions = checkCondition(\n          row.conditions,\n          watch,\n          stepData,\n          isRecurring,\n          data.name,\n          index\n        );\n        if (!rowConditions) return null;\n\n        const showRow = row.expandable ? expanded : true;\n        const label = [...(row.label || [])];\n        if (row.hint)\n          label.push(\n            <Tooltip content={row.hint} contentProps={{ fontStyle: \"normal\" }}>\n              <Hint>\n                <Icon icon=\"question\" />\n              </Hint>\n            </Tooltip>\n          );\n\n        return (\n          <Fragment key={rowKey}>\n            <StyledRow\n              errors={rowErrors}\n              label={label.length > 0 ? label : null}\n              labelAlign={row.labelAlign}\n              labelGutter={row.labelGutter}\n              mb={row?.marginBottom}\n              show={showRow}\n            >\n              {row.message && (\n                <Alert color={row.messageColor} content={row.message} mb={2} />\n              )}\n\n              {row.fields?.map((field, fieldId) => {\n                const error =\n                  isRecurring && errors[data.name] && errors[data.name][index]\n                    ? errors[data.name][index][field.name]?.message\n                    : errors[field.name]?.message;\n\n                if (error) rowErrors.push(error);\n\n                const showIfHasCondition = checkCondition(\n                  field.conditions,\n                  watch,\n                  stepData,\n                  isRecurring,\n                  data.name,\n                  index\n                );\n                if (!showIfHasCondition) return null;\n\n                return (\n                  <FormField\n                    data={data}\n                    field={field}\n                    fieldId={fieldId}\n                    hasError={!!error}\n                    isRecurring={isRecurring}\n                    recurringIndex={index}\n                    rowId={idx}\n                    stepIndex={stepIndex}\n                    stepData={stepData}\n                    currenciesFromDB={currenciesFromDB}\n                  />\n                );\n              })}\n            </StyledRow>\n\n            {row?.divider && <Divider my={row?.dividerSize} />}\n          </Fragment>\n        );\n      })}\n\n      {showExpandButton && (\n        <OutlineButton\n          color=\"secondary\"\n          onClick={() => setExpanded((prev) => !prev)}\n          size=\"sm\"\n        >\n          {expanded ? \"Hide Optional Params\" : \"Show Optional Params\"}\n        </OutlineButton>\n      )}\n    </>\n  );\n};\n\nFormRows.propTypes = {\n  data: PropTypes.shape({\n    name: PropTypes.string,\n    recurring: PropTypes.bool,\n    rows: PropTypes.arrayOf(PropTypes.shape({})),\n  }).isRequired,\n  stepIndex: PropTypes.number.isRequired,\n  stepData: PropTypes.shape({}).isRequired,\n  index: PropTypes.number.isRequired,\n  isRecurring: PropTypes.bool.isRequired,\n  rows: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n};\n\nFormRows.defaultProps = {};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled, { css } from \"styled-components\";\nimport { useFieldArray } from \"react-hook-form\";\nimport { Alert, Icon, OutlineButton, TextButton } from \"@licenserocks/kit\";\n\nimport { FormRows } from \"./FormRows\";\n\nconst Wrapper = styled.div`\n  padding: ${({ theme }) => theme.spacing(2, 2, 2, 6)};\n  background-color: ${({ theme }) => theme.palette.gray.light};\n  border: 1px solid ${({ theme }) => theme.palette.gray.regular};\n  border-radius: 16px;\n  margin-bottom: 16px;\n\n  && {\n    ${({ disabled }) =>\n      disabled &&\n      css`\n        opacity: 0.5;\n        cursor: not-allowed !important;\n        pointer-events: none;\n      `}\n  }\n`;\n\nconst ButtonsWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  margin-bottom: 8px;\n`;\n\nconst Form = ({\n  data,\n  defaultValues,\n  stepIndex,\n  stepFormData,\n  currenciesFromDB,\n}) => {\n  const isRecurring = data.recurring;\n\n  const { fields, append, remove } = useFieldArray({\n    name: isRecurring ? data?.name : \"\",\n  });\n\n  const renderRows = (index) => (\n    <FormRows\n      data={data}\n      index={index}\n      isRecurring={isRecurring}\n      rows={data.rows}\n      stepIndex={stepIndex}\n      stepData={stepFormData}\n      currenciesFromDB={currenciesFromDB}\n    />\n  );\n\n  const renderRecurring = () => (\n    <>\n      {fields.map((item, idx) => {\n        const disabled = defaultValues?.[data.name]?.[idx]?.disabled;\n        return (\n          <Wrapper key={item.id} disabled={disabled}>\n            <ButtonsWrapper>\n              {disabled && (\n                <Alert\n                  content=\"This is a default item and can't be removed/changed.\"\n                  mr={2}\n                />\n              )}\n\n              <OutlineButton\n                color=\"danger\"\n                disabled={disabled}\n                onClick={() => remove(idx)}\n                size=\"sm\"\n              >\n                <Icon icon=\"trash\" prefix=\"fa\" />\n              </OutlineButton>\n            </ButtonsWrapper>\n\n            {renderRows(idx)}\n          </Wrapper>\n        );\n      })}\n\n      <TextButton content=\"+ Add item\" onClick={append} size=\"sm\" />\n    </>\n  );\n\n  return isRecurring ? renderRecurring() : renderRows();\n};\n\nForm.propTypes = {\n  data: PropTypes.shape({\n    name: PropTypes.string,\n    recurring: PropTypes.bool,\n    rows: PropTypes.arrayOf(PropTypes.shape({})),\n  }).isRequired,\n  stepIndex: PropTypes.number.isRequired,\n  stepFormData: PropTypes.shape({}),\n};\n\nForm.defaultProps = {\n  stepFormData: {},\n};\n\nexport default Form;\n","import {\n  faDownload,\n  faHashtag,\n  faTrash,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nexport const MegaFlowIcons = {\n  faDownload,\n  faHashtag,\n  faTrash,\n};\n","import PropTypes from \"prop-types\";\n\nexport const MegaFlowPropTypes = {\n  defaultValues: PropTypes.shape({}),\n  icons: PropTypes.arrayOf(PropTypes.shape()),\n  schema: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\n  onFinish: PropTypes.func,\n  onStepSubmit: PropTypes.func,\n  renderActionButtons: PropTypes.func,\n  theme: PropTypes.shape(),\n  watcher: PropTypes.func,\n  watchList: PropTypes.arrayOf(PropTypes.string),\n  wizardProps: PropTypes.shape(),\n  wrapperProps: PropTypes.shape(),\n};\n\nexport const MegaFlowDefaultProps = {\n  defaultValues: {},\n  icons: [],\n  onFinish: () => { },\n  renderActionButtons: () => { },\n  watchList: [],\n};\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport {\n  AppContainer,\n  RocksKitIcons,\n  RocksKitTheme,\n  Wizard,\n} from \"@licenserocks/kit\";\nimport { FormProvider, useForm } from \"react-hook-form\";\n\nimport { Form } from \"./components\";\nimport { MegaFlowIcons } from \"./theme\";\nimport { MegaFlowPropTypes, MegaFlowDefaultProps } from \"./props\";\n\nconst Wrapper = styled.div``;\n\nconst getOutputData = (output) =>\n  Object.values(output).reduce((obj, acc) => ({ ...obj, ...acc }), {});\n\nconst MegaFlow = ({\n  defaultValues,\n  icons,\n  schema,\n  onFinish,\n  onStepSubmit,\n  renderActionButtons,\n  theme,\n  watcher,\n  wizardProps,\n  wrapperProps,\n  currenciesFromDB,\n  ...props\n}) => {\n  // Parse if schema was type of JSON string\n  const parsedSchema = typeof schema === \"string\" ? JSON.parse(schema) : schema;\n\n  const { steps } = parsedSchema;\n  const [currentStep, setCurrentStep] = useState(0);\n  const isCurrentLastStep = currentStep === steps.length - 1;\n  const [wizardData, setWizardData] = useState({});\n  const { formState, handleSubmit, ...methods } = useForm();\n\n  const stepFormData = wizardData[currentStep] || defaultValues;\n\n  useEffect(() => {\n    methods.reset(stepFormData);\n\n    if (watcher) {\n      watcher(getOutputData(wizardData));\n    }\n  }, [currentStep]);\n\n  const onSubmit = (data) => {\n    const currentState = {\n      ...wizardData,\n      [currentStep]: data,\n    };\n    // Set step data in global wizard object\n    setWizardData(currentState);\n\n    // Send step data to props\n    if (onStepSubmit) onStepSubmit(data);\n\n    if (!isCurrentLastStep) {\n      setCurrentStep((prev) => prev + 1);\n    } else {\n      onFinish(getOutputData(currentState));\n    }\n  };\n\n  const stepsArray = steps.map((st) => ({\n    title: st.title,\n  }));\n\n  const renderForm = () => (\n    <Form\n      data={steps[currentStep]}\n      key={currentStep}\n      stepIndex={currentStep}\n      stepFormData={stepFormData}\n      defaultValues={defaultValues}\n      currenciesFromDB={currenciesFromDB}\n    />\n  );\n\n  return (\n    <AppContainer\n      icons={{ ...RocksKitIcons, ...MegaFlowIcons, ...icons }}\n      theme={theme || RocksKitTheme()}\n    >\n      <Wrapper {...wrapperProps}>\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <FormProvider {...methods}>\n            <Wizard\n              currentStepContent={renderForm()}\n              currentStepIndex={currentStep}\n              renderActionButtons={() =>\n                renderActionButtons(getOutputData(wizardData))\n              }\n              setCurrentStepIndex={setCurrentStep}\n              steps={stepsArray}\n              {...wizardProps}\n              {...props}\n            />\n          </FormProvider>\n        </form>\n      </Wrapper>\n    </AppContainer>\n  );\n};\n\nMegaFlow.propTypes = MegaFlowPropTypes;\n\nMegaFlow.defaultProps = MegaFlowDefaultProps;\n\nexport default MegaFlow;\n"],"names":["mapFieldTypeToComponent","fieldType","FormDatepicker","Select","BorderedRadio","Checkbox","Radio","ToggleSwitch","FileUpload","FilePond","PriceField","ReactSelect","Stepper","TextArea","Input","FormField","data","field","hasError","isRecurring","recurringIndex","stepIndex","fieldId","rowId","stepData","currenciesFromDB","useFormContext","control","register","conditions","defaultValue","name","required","type","others","React","TextButton","Field","fieldKey","fieldName","prevValue","propTypes","PropTypes","shape","string","recurring","bool","rows","arrayOf","isRequired","oneOfType","object","number","defaultProps","getConditionValues","watch","wizardData","recurringName","map","c","includes","split","n","checkCondition","hasConditions","length","conditionValues","target","some","value","not","isTrue","Array","isArray","Boolean","StyledRow","styled","FormRow","Hint","span","FormRows","index","errors","useState","expanded","setExpanded","showExpandButton","row","expandable","idx","rowKey","rowErrors","rowConditions","showRow","label","hint","push","Tooltip","fontStyle","Icon","Fragment","labelAlign","labelGutter","marginBottom","message","Alert","messageColor","fields","error","showIfHasCondition","divider","Divider","dividerSize","OutlineButton","prev","Wrapper","div","theme","spacing","palette","gray","light","regular","disabled","css","ButtonsWrapper","Form","defaultValues","stepFormData","useFieldArray","append","remove","renderRows","renderRecurring","item","id","MegaFlowIcons","faDownload","faHashtag","faTrash","MegaFlowPropTypes","icons","schema","onFinish","func","onStepSubmit","renderActionButtons","watcher","watchList","wizardProps","wrapperProps","MegaFlowDefaultProps","getOutputData","output","Object","values","reduce","obj","acc","MegaFlow","props","parsedSchema","JSON","parse","steps","currentStep","setCurrentStep","isCurrentLastStep","setWizardData","useForm","formState","handleSubmit","methods","useEffect","reset","onSubmit","currentState","stepsArray","st","title","renderForm","AppContainer","RocksKitIcons","RocksKitTheme","FormProvider","Wizard"],"mappings":"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"}